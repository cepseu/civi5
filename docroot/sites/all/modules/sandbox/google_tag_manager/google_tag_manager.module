<?php

/*
 * $Id$
 *
 * Copyright 2012 Sasha Gerrand
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * 	http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Provides hook functions for module behaviour.
 *
 * @author Sasha Gerrand <drupal.org-module-google_tag_manager@sgerrand.com>
 * @version $Id$
 * @package google_tag_manager
 */

/**
 * Implements hook_help().
 * @param string $path
 * @param string $arg
 */
function google_tag_manager_help($path, $arg) {
	switch($path) {
	case 'admin/config/system/google_tag_manager':
		return t('<a href="@gtm_url">Google Tag Manager</a> lets you add and update your website tags, easily and for free, whenever you want, without bugging the IT folks.', array('@gtm_url' => 'http://www.google.com/tagmanager/'));
	}
}

/**
 * Implements hook_permission().
 */
function google_tag_manager_permission() {
	return array(
		'administer google tag manager' => array(
			'title' => t('Administer Google Tag Manager'),
			'description' => t('Perform maintenance tasks for Google Tag Manager'),
		),
	);
}

/**
 * Implements hook_menu().
 */
function google_tag_manager_menu() {
	$items = array();
	$items['admin/config/system/google_tag_manager'] = array(
		'title' => t('Google Tag Manager'),
		'description' => t('Perform maintenance tasks for Google Tag Manager'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('google_tag_manager_admin_settings_form'),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'google_tag_manager.admin.inc',
	);

	return $items;
}

/**
 * Implements hook_page_alter().
 * @param array $page
 */
function google_tag_manager_page_alter(&$page) {
	$account = variable_get('google_tag_manager_account', '');
	$customName = variable_get('google_tag_manager_custom_name', '');

	// Get the page status for visibility filtering
	$status = drupal_get_http_header('Status');
	$trackable_status_codes = array(
		'403 Forbidden',
		'404 Not Found'
	);

	// Check for a valid GTM account value
	if (!empty($account)) {
		$snippet = empty($customName) ? _google_tag_manager_snippet($account) : _google_tag_manager_snippet($account, $customName);
		$page['page_top']['google_tag_manager'] = array(
			'#markup' => t($snippet),
		);
	}
}

/**
 * Outputs the Google Tag Manager JavaScript snippet.
 * @param string $containerId
 * @param string $customName
 */
function _google_tag_manager_snippet($containerId = '', $customName = 'dataLayer') {
	if (empty($containerId)) {
		throw new Exception('Container ID is required');
	}

	$snippet = <<<EOL
<!-- Google Tag Manager -->
<noscript><iframe src="//www.googletagmanager.com/ns.html?id=$containerId"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','$customName','$containerId');</script>
<!-- End Google Tag Manager -->

EOL;

	return $snippet;
}

// vim: set filetype=php expandtab tabstop=2 shiftwidth=2 autoindent smartindent:
